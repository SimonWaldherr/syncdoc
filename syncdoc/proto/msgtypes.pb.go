// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/msgtypes.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	proto/msgtypes.proto

It has these top-level messages:
	Change
	ClientEditEvent
	ServerEditEvent
	ClientFullUpdateRequest
	ServerFullUpdateResponse
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Change struct {
	From  *Change_CursorPosition `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To    *Change_CursorPosition `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	Added []string               `protobuf:"bytes,3,rep,name=added" json:"added,omitempty"`
}

func (m *Change) Reset()                    { *m = Change{} }
func (m *Change) String() string            { return proto.CompactTextString(m) }
func (*Change) ProtoMessage()               {}
func (*Change) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Change) GetFrom() *Change_CursorPosition {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Change) GetTo() *Change_CursorPosition {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Change) GetAdded() []string {
	if m != nil {
		return m.Added
	}
	return nil
}

type Change_CursorPosition struct {
	Line int32 `protobuf:"varint,1,opt,name=line" json:"line,omitempty"`
	Ch   int32 `protobuf:"varint,2,opt,name=ch" json:"ch,omitempty"`
}

func (m *Change_CursorPosition) Reset()                    { *m = Change_CursorPosition{} }
func (m *Change_CursorPosition) String() string            { return proto.CompactTextString(m) }
func (*Change_CursorPosition) ProtoMessage()               {}
func (*Change_CursorPosition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Change_CursorPosition) GetLine() int32 {
	if m != nil {
		return m.Line
	}
	return 0
}

func (m *Change_CursorPosition) GetCh() int32 {
	if m != nil {
		return m.Ch
	}
	return 0
}

type ClientEditEvent struct {
	PreSequenceNum int32     `protobuf:"varint,1,opt,name=preSequenceNum" json:"preSequenceNum,omitempty"`
	Changes        []*Change `protobuf:"bytes,2,rep,name=changes" json:"changes,omitempty"`
}

func (m *ClientEditEvent) Reset()                    { *m = ClientEditEvent{} }
func (m *ClientEditEvent) String() string            { return proto.CompactTextString(m) }
func (*ClientEditEvent) ProtoMessage()               {}
func (*ClientEditEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ClientEditEvent) GetPreSequenceNum() int32 {
	if m != nil {
		return m.PreSequenceNum
	}
	return 0
}

func (m *ClientEditEvent) GetChanges() []*Change {
	if m != nil {
		return m.Changes
	}
	return nil
}

// Different ServerEditEvents can be sent to different clients. So this should work.
type ServerEditEvent struct {
	PostSequenceNum int32     `protobuf:"varint,1,opt,name=postSequenceNum" json:"postSequenceNum,omitempty"`
	Changes         []*Change `protobuf:"bytes,2,rep,name=changes" json:"changes,omitempty"`
}

func (m *ServerEditEvent) Reset()                    { *m = ServerEditEvent{} }
func (m *ServerEditEvent) String() string            { return proto.CompactTextString(m) }
func (*ServerEditEvent) ProtoMessage()               {}
func (*ServerEditEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ServerEditEvent) GetPostSequenceNum() int32 {
	if m != nil {
		return m.PostSequenceNum
	}
	return 0
}

func (m *ServerEditEvent) GetChanges() []*Change {
	if m != nil {
		return m.Changes
	}
	return nil
}

type ClientFullUpdateRequest struct {
}

func (m *ClientFullUpdateRequest) Reset()                    { *m = ClientFullUpdateRequest{} }
func (m *ClientFullUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientFullUpdateRequest) ProtoMessage()               {}
func (*ClientFullUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ServerFullUpdateResponse struct {
	PostSequenceNum int32    `protobuf:"varint,1,opt,name=postSequenceNum" json:"postSequenceNum,omitempty"`
	Lines           []string `protobuf:"bytes,2,rep,name=lines" json:"lines,omitempty"`
}

func (m *ServerFullUpdateResponse) Reset()                    { *m = ServerFullUpdateResponse{} }
func (m *ServerFullUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*ServerFullUpdateResponse) ProtoMessage()               {}
func (*ServerFullUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ServerFullUpdateResponse) GetPostSequenceNum() int32 {
	if m != nil {
		return m.PostSequenceNum
	}
	return 0
}

func (m *ServerFullUpdateResponse) GetLines() []string {
	if m != nil {
		return m.Lines
	}
	return nil
}

func init() {
	proto.RegisterType((*Change)(nil), "main.Change")
	proto.RegisterType((*Change_CursorPosition)(nil), "main.Change.CursorPosition")
	proto.RegisterType((*ClientEditEvent)(nil), "main.ClientEditEvent")
	proto.RegisterType((*ServerEditEvent)(nil), "main.ServerEditEvent")
	proto.RegisterType((*ClientFullUpdateRequest)(nil), "main.ClientFullUpdateRequest")
	proto.RegisterType((*ServerFullUpdateResponse)(nil), "main.ServerFullUpdateResponse")
}

func init() { proto.RegisterFile("proto/msgtypes.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0xd9, 0xfe, 0x59, 0x71, 0x94, 0x16, 0xc2, 0x82, 0x55, 0x2f, 0x4b, 0x0f, 0x52, 0x10,
	0xba, 0xa0, 0xbe, 0x41, 0x59, 0x8f, 0x22, 0x59, 0xbc, 0x78, 0xab, 0xed, 0xb8, 0x1b, 0x68, 0x93,
	0x98, 0xa4, 0x0b, 0xbe, 0x96, 0x4f, 0x68, 0x9a, 0x28, 0xae, 0xeb, 0x41, 0xbd, 0xcd, 0xcc, 0xf7,
	0x31, 0xdf, 0x2f, 0x43, 0x60, 0x26, 0x95, 0x30, 0x62, 0xd1, 0xeb, 0xb5, 0x79, 0x95, 0xa8, 0x4b,
	0xd7, 0x92, 0xa8, 0xaf, 0x19, 0xcf, 0xdf, 0x26, 0x30, 0xad, 0x36, 0x35, 0x5f, 0x23, 0x59, 0x40,
	0xf4, 0xac, 0x44, 0x9f, 0x4d, 0xe6, 0x93, 0xe2, 0xe8, 0xea, 0xbc, 0x1c, 0xf5, 0xd2, 0x6b, 0x65,
	0x35, 0x28, 0x2d, 0xd4, 0xbd, 0xd0, 0xcc, 0x30, 0xc1, 0xa9, 0x33, 0x92, 0x4b, 0x08, 0x8c, 0xc8,
	0x82, 0xdf, 0xed, 0xd6, 0x46, 0x66, 0x10, 0xd7, 0x6d, 0x8b, 0x6d, 0x16, 0xce, 0xc3, 0xe2, 0x90,
	0xfa, 0xe6, 0xec, 0x06, 0x92, 0xef, 0x5e, 0x42, 0x20, 0xea, 0x18, 0x47, 0x47, 0x11, 0x53, 0x57,
	0x93, 0x04, 0x82, 0x66, 0xe3, 0x82, 0x62, 0x6a, 0xab, 0xbc, 0x86, 0xb4, 0xea, 0x18, 0x72, 0xb3,
	0x6c, 0x99, 0x59, 0x6e, 0x6d, 0x41, 0x2e, 0x20, 0x91, 0x0a, 0x57, 0xf8, 0x32, 0x20, 0x6f, 0xf0,
	0x6e, 0xe8, 0x3f, 0x16, 0xec, 0x4d, 0xad, 0xef, 0xa0, 0x71, 0x8c, 0xda, 0xee, 0x0b, 0x2d, 0xf8,
	0xf1, 0x2e, 0x38, 0xfd, 0x14, 0xf3, 0x06, 0xd2, 0x15, 0xaa, 0x2d, 0xaa, 0xaf, 0x88, 0x02, 0x52,
	0x29, 0xb4, 0xf9, 0x99, 0xb1, 0x3f, 0xfe, 0x73, 0xc8, 0x29, 0x9c, 0xf8, 0x77, 0xdc, 0x0e, 0x5d,
	0xf7, 0x20, 0xdb, 0xda, 0x20, 0x1d, 0xd7, 0x68, 0x93, 0x3f, 0x42, 0xe6, 0xf3, 0x77, 0x25, 0x2d,
	0x05, 0xd7, 0xf8, 0x0f, 0x10, 0x7b, 0xf4, 0xf1, 0x80, 0x1e, 0xc3, 0x1e, 0xdd, 0x35, 0x4f, 0x53,
	0xf7, 0x01, 0xae, 0xdf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xb2, 0xaa, 0x07, 0x18, 0x02, 0x00,
	0x00,
}
